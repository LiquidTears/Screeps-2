var roleClaimer = {
    run: function(creep) {
        
        if(Game.flags.claimCheckpoint){
            if(creep.memory.checkpoint == 0){
            creep.moveTo(Game.flags.claimCheckpoint);
            if(creep.pos.x == Game.flags.claimCheckpoint.pos.x && creep.pos.y == Game.flags.claimCheckpoint.pos.y){
                creep.memory.checkpoint = 1;
                }
            }
            
            if(creep.memory.checkpoint == 1){
            creep.moveTo(Game.flags.claimCheckpoint2);
            if(creep.pos.x == Game.flags.claimCheckpoint2.pos.x && creep.pos.y == Game.flags.claimCheckpoint2.pos.y){
                creep.memory.checkpoint = 2;
                }
            }
            
            if(creep.memory.checkpoint == 2){
                //hunter code
                if(creep.room != Game.flags.Claim.room)
                {
                    creep.moveTo(Game.flags.Claim, {visualizePathStyle: {stroke: '#8a2be2'}});
                }
                if(creep.room = Game.flags.Claim.room){
                    if(creep.room.controller){
                        if(creep.claimController(creep.room.controller) == ERR_NOT_IN_RANGE) {
                            creep.moveTo(creep.room.controller, {visualizePathStyle: {stroke: '#8a2be2'}});
                        }
                    }
                }
            }
        }
        else
        {
            //hunter code again
            if(creep.room != Game.flags.Claim.room)
            {
                creep.moveTo(Game.flags.Claim, {visualizePathStyle: {stroke: '#8a2be2'}});
            }
            if(creep.room = Game.flags.Claim.room){
                if(creep.room.controller){
                    if(creep.claimController(creep.room.controller) == ERR_NOT_IN_RANGE) {
                        creep.moveTo(creep.room.controller, {visualizePathStyle: {stroke: '#8a2be2'}});
                    }
                }
            }
        }
    }
};

module.exports = roleClaimer;
