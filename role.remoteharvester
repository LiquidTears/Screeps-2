var roleRemoteHarvester = {
    run: function(creep) {
        if(creep.memory.H_PFlag == 1){
           var TargetFlag =  Game.flags.PFlag1
        }
        if(creep.memory.H_PFlag == 2){
           var TargetFlag =  Game.flags.PFlag2
        }
        if(creep.memory.H_PFlag == 3){
           var TargetFlag =  Game.flags.PFlag3
        }
        if(creep.memory.H_PFlag == 4){
           var TargetFlag =  Game.flags.PFlag4
        }
	    if(creep.carry.energy == 0) {
            creep.memory.isHarvesting = true;
            creep.say('ðŸ”„');
        }
        else if(creep.carry.energy == creep.carryCapacity){
            creep.memory.isHarvesting = false;
            creep.say('ðŸš§');
        }
        if(creep.memory.isHarvesting){
            if(TargetFlag && creep.room != TargetFlag.room){
            creep.moveTo(TargetFlag);
            }else{
                
            var sources = creep.room.find(FIND_SOURCES);
            if(creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {
                creep.moveTo(sources[0]);
                }
            }
        }
                    
        if(!creep.memory.isHarvesting){
            if(Game.flags.Base1 && creep.room != Game.flags.Base1.room){
                creep.moveTo(Game.flags.Base1);
            }else{
                var targets = creep.room.find(FIND_STRUCTURES, {
                    filter: (structure) => {
                         return (structure.structureType == STRUCTURE_EXTENSION ||
                                structure.structureType == STRUCTURE_SPAWN ||
                                structure.structureType == STRUCTURE_TOWER ||
                                structure.structureType == STRUCTURE_STORAGE) 
                                && structure.energy < structure.energyCapacity;
                    }
                });
                if(targets.length > 0) {
                    targets.sort((a,b) => a.energy - b.energy);
                    if(creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                        creep.moveTo(targets[0]);
                    }
                }
            }
        }
    }
};

module.exports = roleRemoteHarvester;
